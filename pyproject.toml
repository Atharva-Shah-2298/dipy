[project]
name = "dipy"
description = "Diffusion MRI Imaging in Python"
license = {file = "LICENSE"}
readme = "README.rst"
requires-python = ">=3.9"
authors = [{ name = "Elefterios Garyfallidis", email = "neuroimaging@python.org" }]
maintainers = [
    {name = "dipy developers", email="dipy@python.org"},
]
keywords = ["dipy", "diffusionimaging", "dti", "tracking", "tractography",
            "diffusionmri", "mri", "tractometry", "connectomics", "brain",
            "dipymri", "microstructure", "deeplearning", "registration",
            "segmentations", "simulation", "medical", "imaging", "brain",
            "machinelearning", "signalprocessing"]
classifiers = [
    'Development Status :: 4 - Beta',
    'Environment :: Console',
    'Intended Audience :: Developers',
    'Intended Audience :: Science/Research',
    'License :: OSI Approved :: BSD License',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3 :: Only',
    "Topic :: Software Development :: Libraries",
    'Topic :: Scientific/Engineering',
    'Operating System :: Microsoft :: Windows',
    'Operating System :: POSIX',
    'Operating System :: Unix',
    'Operating System :: MacOS',
]
dynamic = ['version']
dependencies = [
    "cython>=0.29.24, !=0.29.29",
    "numpy>=1.14.5",
    "scipy>=1.1",
    "nibabel>=3.0.0",
    "h5py>=2.8.0",
    "packaging>=19.0",
    "tqdm>=4.30.0",
]


[project.optional-dependencies]
build = [
    # Also update [build-system] -> requires
    'meson-python>=0.13',
    'wheel',
    'setuptools>=67',
    'packaging>=21',
    'ninja',
    'Cython>=0.29.32',
    'pythran',
    'numpy>=1.22',
    # Developer UI
    'spin==0.5',
    'build',
]
test = [
    "pytest",
    "coverage",
    "coveralls",
    "codecov",
]
docs = [
    "cython",
    "numpy",
    "scipy",
    "nibabel>=3.0.0",
    "h5py",
    "h5py<3.0.0; sys_platform == 'win32'",
    "cvxpy",
    "pandas",
    "tables",
    "matplotlib",
    "fury>=0.8.0",
    "scikit-learn",
    "scikit-image",
    "statsmodels",
    "boto3"
]
viz = [
    "fury>=0.9.0",
    "matplotlib"
]
ml = [
    "scikit_learn",
    "pandas",
    "statsmodels",
    "tables",
    "tensorflow"
]

all = [
]


[project.urls]
homepage = "https://dipy.org"
documentation = "https://dipy.org/documentation/latest/documentation/"
source = "https://github.com/dipy/dipy"
download = "https://pypi.org/project/dipy/#files"
tracker = "https://github.com/dipy/dipy/issues"

[build-system]
build-backend = "mesonpy"
requires = [
    "meson-python>=0.13.1",
    "Cython>=0.29.35",
    "packaging>21.0",
    "wheel",
    "numpy==1.22.4; python_version=='3.9' and platform_python_implementation != 'PyPy'",
    "numpy==1.22.4; python_version=='3.10' and platform_system=='Windows' and platform_python_implementation != 'PyPy'",
    "numpy==1.22.4; python_version=='3.10' and platform_system != 'Windows' and platform_python_implementation != 'PyPy'",
    "numpy==1.23.3; python_version=='3.11' and platform_python_implementation != 'PyPy'",
    "numpy; python_version>='3.12'",
    "numpy; python_version>='3.9' and platform_python_implementation=='PyPy'",
]

[tool.spin]
package = 'dipy'

[tool.spin.commands]
"Build" = ["spin.build", "spin.test"]
"Environments" = ["spin.shell", "spin.ipython", "spin.python"]
# TODO: Add custom commands
#"Documentation" = [".spin/cmds.py:docs"]
#"Metrics" = [".spin/cmds.py:asv", ".spin/cmds.py:coverage"]

[tool.pytest.ini_options]
addopts = "--ignore=dipy/testing/decorators.py"